{"id":"05 react-fragment.html","dependencies":[],"generated":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Intro To React</title>\n    <script crossorigin=\"\" src=\"https://unpkg.com/react@17/umd/react.production.min.js\"></script>\n    <script crossorigin=\"\" src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"></script>\n    <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n  <script type=\"text/babel\">\n    const node = document.getElementById(\"root\");\n    // Render two elements side by side\n    // const helloElement = React.createElement(\"span\", null, \"Hello\");\n    // const worldElement = React.createElement(\"span\", \"World\");\n\n    // // 1. Should not occupy extra space in DOM\n    // // 2. Can contain children.\n\n    // const element = React.createElement(\n    //   \"div\",\n    //   null,\n    //   helloElement,\n    //   worldElement\n    // );\n\n    // // With ReactDom Render\n    // // ReactDOM.render(?,node);\n    // // It is impossible to render elements side by side in React\n    // const fragement = React.createElement(\n    //   React.Fragement, // type of element\n    //   null, //Props\n    //   <div>Hello World</div>, //child1\n    //   worldElement //child2\n    // );\n\n    // ReactDOM.render(fragement, node);\n\n    // Without Create Class\n    const element = (\n      <>\n        <div>\n          <div>Hello World</div>\n          <div>Good Bye World</div>\n        </div>\n      </>\n    );\n\n    console.log(\"Element is\", element);\n\n    ReactDOM.render(element, node);\n  </script>\n</html>\n"},"sourceMaps":null,"error":null,"hash":"59682ea4560570b541f39c852c5246c1","cacheData":{}}