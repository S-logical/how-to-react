{"id":"06 reusable-components.html","dependencies":[],"generated":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Intro To React</title>\n    <script crossorigin=\"\" src=\"https://unpkg.com/react@17/umd/react.production.min.js\"></script>\n    <script crossorigin=\"\" src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"></script>\n    <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n  <script type=\"text/babel\">\n    const node = document.getElementById(\"root\");\n    // Render two elements side by side\n\n    // const element = (\n    //   <div className=\"container\">\n    //     <div className=\"message\">Hello World</div>\n    //     <div className=\"message\">Hello World</div>\n    //   </div>\n    // );\n\n    //But we do not want to repeat.\n    // const message = <div className=\"message\">Hello World</div>;\n    // const element = (\n    //   <div className=\"container\">\n    //     {message}\n    //     {message}\n    //   </div>\n    // );\n\n    //Let's say both should render different content (parametrised function)\n    // const message = (props) => (\n    //   <div className=\"message\">\n    //     {props.msg} {props.name}\n    //   </div>\n    // );\n    // const element = (\n    //   <div className=\"container\">\n    //     {message({ msg: \"Hello World\", name: \"Ram\" })}\n    //     {message({ msg: \"Good Bye World\", name: \"Vinay\" })}\n    //   </div>\n    // );\n\n    //lets use JSX\n    const Message = (props) => {\n      console.log(\"Props are\", props);\n      return (\n        <div className=\"message\">\n          {props.msg} {props.name}\n        </div>\n      );\n    };\n    const element = (\n      <div className=\"container\">\n        <Message msg=\"Hello World\" name=\"Vanshu\" />\n        <Message msg=\"Good Bye World\" name=\"Hassija\" />\n      </div>\n    );\n    console.log(Message);\n\n    // const Message = (props) => {\n    //   return <div className=\"message\">{props.children}</div>;\n    // };\n    // const element = (\n    //   <div className=\"container\">\n    //     <Message>Hello World</Message>\n    //     <Message children=\"Good Bye World\" />\n    //   </div>\n    // );\n    // console.log(Message);\n\n    ReactDOM.render(element, node);\n  </script>\n</html>\n"},"sourceMaps":null,"error":null,"hash":"5cb4742a7e0ef6393a218bd8d7b419cf","cacheData":{}}